Exam 3 Multiple Choice Questions

- These questions may not be in the same order as what you saw on the exam.
- Your answer is indicated by a '->'

~~~~~~~~~~~~~~~~~~~~~~~~

Objects of type iterator promise to implement each of the following
except:

Choices:
   a. `operator=`
   b. All of these are implemented in an iterator.
   c. `operator++`
   d. `operator==`
-> e. `operator*`
Your answer was incorrect.

~~~~~~~~~~~~~~~~~~~~~~~~

Consider the following code:

    #include <iostream>
    using namespace std;

    class dunno
    {
        public:

        float operator()(float f){
            return f>0 ? f : -f;
        }
    };

    void main()
    {
        float f = -123.45;
        // replace this line
        float something_f = meme(f);
        cout << "f = " << f << " something_f = " << something_f << endl;
    }

Fill in line 16 in the above code:

Choices:
   a. The line is unnecessary
   b. None of the other options is accurate.
   c. `float meme;`
-> d. `dunno meme;`
   e. `auto meme;`
Your answer was correct.

~~~~~~~~~~~~~~~~~~~~~~~~

Suppose a binary tree holds 357 keys. Then our node-based implementation
of that tree has how many `NULL` pointers?

Choices:
-> a. 358
   b. The answer cannot be determined from the information given.
   c. None of these is the correct response.
   d. 178
   e. 712
Your answer was correct.

~~~~~~~~~~~~~~~~~~~~~~~~

Suppose that we have numbers between 1 and 1000 in a binary search tree
and we want to search for the number 363. Which of the following
sequences cannot be the sequence of nodes visited in the search?

Choices:
   a. `2, 252, 401, 398, 330, 344, 397, 363`
   b. `935, 278, 347, 621, 399, 392, 358, 363`
   c. `925, 202, 911, 240, 912, 245, 363`
   d. `924, 220, 911, 244, 898, 258, 362, 363`
-> e. `2, 399, 387, 219, 266, 382, 381, 278, 363`
Your answer was incorrect.

~~~~~~~~~~~~~~~~~~~~~~~~

Consider the AVL Tree built by inserting the following sequence of
integers, one at a time:

    5, 4, 7, 9, 8, 3, 1

What is 8's left child?

Choices:
   a. The node containing 4.
   b. None of these answers is correct.
   c. The node containing 5.
   d. `NULL`.
-> e. The node containing 7.
Your answer was correct.

~~~~~~~~~~~~~~~~~~~~~~~~

How many data structures in this list can used to implement a Dictionary
so that all of its functions have a worst case running time strictly
better than $O(n)$?

-   Stack
-   Queue
-   Binary-Search Tree
-   AVL Tree
-   Linked List


Choices:
   a. 2
   b. 4
   c. 5
   d. 3
-> e. 1
Your answer was correct.

~~~~~~~~~~~~~~~~~~~~~~~~

Choose the appropriate running time from the list below.

The variable $n$ represents the number of items (keys, data, or key/data
pairs) in the structure. In answering this question you should assume
the best possible implementation given the constraints, and also assume
that every array is sufficiently large to handle all items (unless
otherwise stated).

Worst case time to find the In Order Successor of a given key in a
Binary Search Tree (if it exists).

Choices:
-> a. $O(n)$
   b. $O(1)$
   c. $O(n^2)$
   d. $O(n\log n)$
   e. $O(\log n)$
Your answer was correct.

~~~~~~~~~~~~~~~~~~~~~~~~

Choose the appropriate running time from the list below.

The variable $n$ represents the number of items (keys, data, or key/data
pairs) in the structure. In answering this question you should assume
the best possible implementation given the constraints, and also assume
that every array is sufficiently large to handle all items (unless
otherwise stated).

Insert a key into a Binary Search Tree (not necessarily AVL)

Choices:
-> a. $O(n)$
   b. $O(\log n)$
   c. $O(n\log n)$
   d. $O(n^2)$
   e. $O(1)$
Your answer was correct.

~~~~~~~~~~~~~~~~~~~~~~~~

Choose the appropriate running time from the list below.

The variable $n$ represents the number of items (keys, data, or key/data
pairs) in the structure. In answering this question you should assume
the best possible implementation given the constraints, and also assume
that every array is sufficiently large to handle all items (unless
otherwise stated).

Worst case time to find the In Order Predecessor of a given key in a AVL
Tree (if it exists).

Choices:
   a. $O(n^2)$
   b. $O(n)$
   c. $O(1)$
-> d. $O(\log n)$
   e. $O(n\log n)$
Your answer was correct.

~~~~~~~~~~~~~~~~~~~~~~~~

Choose the appropriate running time from the list below.

The variable $n$ represents the number of items (keys, data, or key/data
pairs) in the structure. In answering this question you should assume
the best possible implementation given the constraints, and also assume
that every array is sufficiently large to handle all items (unless
otherwise stated).

Compute the height of every subtree in a Binary Search Tree.

Choices:
   a. $O(\log n)$
   b. $O(n)$
   c. $O(n\log n)$
   d. $O(1)$
-> e. $O(n^2)$
Your answer was incorrect.

~~~~~~~~~~~~~~~~~~~~~~~~

